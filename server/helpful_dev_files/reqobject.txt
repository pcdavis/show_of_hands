the createStack controller just fired.Here is the req IncomingMessage {
    _readableState: ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList {
            head: [Object],
            tail: [Object],
            length: 1
        },
        length: 1,
        pipes: null,
        pipesCount: 0,
        flowing: null,
        ended: true,
        endEmitted: false,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: true,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: true,
        decoder: null,
        encoding: null
    },
    readable: true,
    domain: null,
    _events: {},
    _eventsCount: 0,
    _maxListeners: undefined,
    socket: Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [Object],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: false,
        domain: null,
        _events: {
            end: [Function: socketOnEnd],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: true,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: false,
        allowHalfOpen: true,
        destroyed: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 34637,
        parser: null,
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            upgrading: false,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end]
        }
    },
    connection: Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [Object],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: false,
        domain: null,
        _events: {
            end: [Function: socketOnEnd],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: true,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: false,
        allowHalfOpen: true,
        destroyed: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 34637,
        parser: null,
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            upgrading: false,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end]
        }
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    headers: {
        'x-forwarded-host': 'localhost:3000',
        'x-forwarded-proto': 'http',
        'x-forwarded-port': '3000',
        'x-forwarded-for': '127.0.0.1',
        cookie: 'connect.sid=s%3A5t_AJ8h_x7ewgvf_jyLfw55_Ar4micQr.b%2FbY59oXKebszaWOK%2B2jWaxFJHKQlpYFzNzeCQ21N6A',
        'accept-language': 'en-US,en;q=0.9,de;q=0.8',
        'accept-encoding': 'gzip, deflate, br',
        referer: 'http://localhost:3000/',
        dnt: '1',
        'content-type': 'application/x-www-form-urlencoded',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36',
        origin: 'http://localhost:3005/',
        accept: 'application/json, text/plain, */*',
        'content-length': '1',
        connection: 'close',
        host: 'localhost:3005'
    },
    rawHeaders: ['x-forwarded-host',
        'localhost:3000',
        'x-forwarded-proto',
        'http',
        'x-forwarded-port',
        '3000',
        'x-forwarded-for',
        '127.0.0.1',
        'cookie',
        'connect.sid=s%3A5t_AJ8h_x7ewgvf_jyLfw55_Ar4micQr.b%2FbY59oXKebszaWOK%2B2jWaxFJHKQlpYFzNzeCQ21N6A',
        'accept-language',
        'en-US,en;q=0.9,de;q=0.8',
        'accept-encoding',
        'gzip, deflate, br',
        'referer',
        'http://localhost:3000/',
        'dnt',
        '1',
        'content-type',
        'application/x-www-form-urlencoded',
        'user-agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36',
        'origin',
        'http://localhost:3005/',
        'accept',
        'application/json, text/plain, */*',
        'content-length',
        '1',
        'connection',
        'close',
        'host',
        'localhost:3005'
    ],
    trailers: {},
    rawTrailers: [],
    upgrade: false,
    url: '/api/newstack',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: Socket {
        connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: [Object],
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            defaultEncoding: 'utf8',
            ranOut: false,
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: false,
        domain: null,
        _events: {
            end: [Function: socketOnEnd],
            finish: [Function: onSocketFinish],
            _socketEnd: [Function: onSocketEnd],
            drain: [Object],
            timeout: [Function],
            error: [Function: socketOnError],
            close: [Object],
            data: [Function: socketOnData],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            needDrain: false,
            ending: true,
            ended: true,
            finished: true,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: true,
            bufferProcessing: false,
            onwrite: [Function],
            writecb: null,
            writelen: 0,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: true,
            errorEmitted: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: false,
        allowHalfOpen: true,
        destroyed: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _server: Server {
            domain: null,
            _events: [Object],
            _eventsCount: 2,
            _maxListeners: undefined,
            _connections: 1,
            _handle: [Object],
            _usingSlaves: false,
            _slaves: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            _pendingResponseData: 0,
            _connectionKey: '6::::3005'
        },
        _idleTimeout: -1,
        _idleNext: null,
        _idlePrev: null,
        _idleStart: 34637,
        parser: null,
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: ServerResponse {
            domain: null,
            _events: [Object],
            _eventsCount: 1,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            upgrading: false,
            chunkedEncoding: false,
            shouldKeepAlive: false,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedHeader: {},
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: [Circular],
            connection: [Circular],
            _header: null,
            _headers: [Object],
            _headerNames: [Object],
            _onPendingData: [Function: updateOutgoingData],
            req: [Circular],
            locals: {},
            writeHead: [Function: writeHead],
            end: [Function: end]
        }
    },
    _consuming: false,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/api/newstack',
    _parsedUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/api/newstack',
        path: '/api/newstack',
        href: '/api/newstack',
        _raw: '/api/newstack'
    },
    params: {},
    query: {},
    res: ServerResponse {
        domain: null,
        _events: {
            finish: [Function: resOnFinish]
        },
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: Socket {
            connecting: false,
            _hadError: false,
            _handle: null,
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: false,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: false,
            allowHalfOpen: true,
            destroyed: true,
            _bytesDispatched: 0,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: -1,
            _idleNext: null,
            _idlePrev: null,
            _idleStart: 34637,
            parser: null,
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular]
        },
        connection: Socket {
            connecting: false,
            _hadError: false,
            _handle: null,
            _parent: null,
            _host: null,
            _readableState: [Object],
            readable: false,
            domain: null,
            _events: [Object],
            _eventsCount: 10,
            _maxListeners: undefined,
            _writableState: [Object],
            writable: false,
            allowHalfOpen: true,
            destroyed: true,
            _bytesDispatched: 0,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Object],
            _server: [Object],
            _idleTimeout: -1,
            _idleNext: null,
            _idlePrev: null,
            _idleStart: 34637,
            parser: null,
            on: [Function: socketOnWrap],
            _paused: false,
            read: [Function],
            _consuming: true,
            _httpMessage: [Circular]
        },
        _header: null,
        _headers: {
            'x-powered-by': 'Express'
        },
        _headerNames: {
            'x-powered-by': 'X-Powered-By'
        },
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end]
    },
    body: {},
    _parsedOriginalUrl: Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/api/newstack',
        path: '/api/newstack',
        href: '/api/newstack',
        _raw: '/api/newstack'
    },
    sessionStore: MemoryStore {
        domain: null,
        _events: {
            disconnect: [Function: ondisconnect],
            connect: [Function: onconnect]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        sessions: {
            '5t_AJ8h_x7ewgvf_jyLfw55_Ar4micQr': '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":2}}'
        },
        generate: [Function]
    },
    sessionID: '5t_AJ8h_x7ewgvf_jyLfw55_Ar4micQr',
    session: Session {
        cookie: {
            path: '/',
            _expires: null,
            originalMaxAge: null,
            httpOnly: true
        },
        passport: {
            user: 2
        }
    },
    _passport: {
        instance: Authenticator {
            _key: 'passport',
            _strategies: [Object],
            _serializers: [Object],
            _deserializers: [Object],
            _infoTransformers: [],
            _framework: [Object],
            _userProperty: 'user',
            _sm: [Object],
            Authenticator: [Function: Authenticator],
            Passport: [Function: Authenticator],
            Strategy: [Object],
            strategies: [Object]
        },
        session: {
            user: 2
        }
    },
    user: anonymous {
        user_id: 2,
        user_name: '',
        isteacher: null,
        isstudent: null,
        permissions_level: 1,
        first_name: '',
        last_name: '',
        screen_name: '',
        img: '',
        auth_id: 'google-oauth2|108787943631662510113'
    },
    route: Route {
        path: '/api/newstack',
        stack: [
            [Object]
        ],
        methods: {
            post: true
        }
    }
}
REC TESTING-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- --5 t_AJ8h_x7ewgvf_jyLfw55_Ar4micQr