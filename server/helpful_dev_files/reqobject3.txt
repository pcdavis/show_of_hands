isteacher: null,
isstudent: null,
permissions_level: 1,
first_name: '',
last_name: '',
screen_name: '',
img: '',
auth_id: 'google-oauth2|108787943631662510113' }
2
fetchStacks worked [ anonymous {
  quiz_id: 3,
  user_id: 2,
  question: 'What is the capital of New York?',
  correct_answer: 'Albany',
  false_1: 'Buffalo',
  false_2: 'Syracuse',
  false_3: 'New York City',
  content_id: 3,
  ordinal_val: null,
  stack_id: 1,
  stack_title: 'State Capitals' },
anonymous {
  quiz_id: 2,
  user_id: 2,
  question: 'What is the capital of California?',
  correct_answer: 'Sacramento',
  false_1: 'Napa Valley',
  false_2: 'San Francisco',
  false_3: 'Bakersfield',
  content_id: 2,
  ordinal_val: null,
  stack_id: 1,
  stack_title: 'State Capitals' },
anonymous {
  quiz_id: 1,
  user_id: 2,
  question: 'What is the capital of Virginia?',
  correct_answer: 'Richmond',
  false_1: 'Petersburg',
  false_2: 'Williamsburg',
  false_3: 'Fredericksburg',
  content_id: 1,
  ordinal_val: null,
  stack_id: 1,
  stack_title: 'State Capitals' },
anonymous {
  quiz_id: 46,
  user_id: 2,
  question: 'What color is a pumpkin?',
  correct_answer: 'Orange',
  false_1: 'Blue',
  false_2: 'Red',
  false_3: 'Brown',
  content_id: 42,
  ordinal_val: null,
  stack_id: 39,
  stack_title: 'What color is it?' },
anonymous {
  quiz_id: 45,
  user_id: 2,
  question: 'What color is an apple?',
  correct_answer: 'Red',
  false_1: 'Blue',
  false_2: 'Orange',
  false_3: 'Brown',
  content_id: 41,
  ordinal_val: null,
  stack_id: 39,
  stack_title: 'What color is it?' } ]
here is the response that comes into .then from sq_find_logged_in_user. response[0] is sent to done  [ anonymous {
  user_id: 2,
  user_name: '',
  isteacher: null,
  isstudent: null,
  permissions_level: 1,
  first_name: '',
  last_name: '',
  screen_name: '',
  img: '',
  auth_id: 'google-oauth2|108787943631662510113' } ]
here is the req.body inside controller createStack IncomingMessage {
_readableState:
 ReadableState {
   objectMode: false,
   highWaterMark: 16384,
   buffer: BufferList { head: [Object], tail: [Object], length: 1 },
   length: 6,
   pipes: null,
   pipesCount: 0,
   flowing: null,
   ended: true,
   endEmitted: false,
   reading: false,
   sync: true,
   needReadable: false,
   emittedReadable: true,
   readableListening: false,
   resumeScheduled: false,
   defaultEncoding: 'utf8',
   ranOut: false,
   awaitDrain: 0,
   readingMore: true,
   decoder: null,
   encoding: null },
readable: true,
domain: null,
_events: {},
_eventsCount: 0,
_maxListeners: undefined,
socket:
 Socket {
   connecting: false,
   _hadError: false,
   _handle:
    TCP {
      bytesRead: 691,
      _externalStream: {},
      fd: -1,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0,
      _consumed: true },
   _parent: null,
   _host: null,
   _readableState:
    ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: [Object],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null },
   readable: true,
   domain: null,
   _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause] },
   _eventsCount: 10,
   _maxListeners: undefined,
   _writableState:
    WritableState {
      objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object] },
   writable: true,
   allowHalfOpen: true,
   destroyed: false,
   _bytesDispatched: 0,
   _sockname: null,
   _pendingData: null,
   _pendingEncoding: '',
   server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _idleTimeout: 120000,
   _idleNext:
    Socket {
      connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      _bytesDispatched: 653,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 2620195,
      parser: [Object],
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
   _idlePrev:
    TimersList {
      _idleNext: [Circular],
      _idlePrev: [Object],
      _timer: [Object],
      _unrefed: true,
      msecs: 120000,
      nextTick: false },
   _idleStart: 2626313,
   parser:
    HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: onParserExecute],
      _headers: [],
      _url: '',
      _consumed: true,
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
   on: [Function: socketOnWrap],
   _paused: false,
   read: [Function],
   _consuming: true,
   _httpMessage:
    ServerResponse {
      domain: null,
      _events: [Object],
      _eventsCount: 1,
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      outputSize: 0,
      writable: true,
      _last: false,
      upgrading: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      _onPendingData: [Function: updateOutgoingData],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] } },
connection:
 Socket {
   connecting: false,
   _hadError: false,
   _handle:
    TCP {
      bytesRead: 691,
      _externalStream: {},
      fd: -1,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0,
      _consumed: true },
   _parent: null,
   _host: null,
   _readableState:
    ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: [Object],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null },
   readable: true,
   domain: null,
   _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause] },
   _eventsCount: 10,
   _maxListeners: undefined,
   _writableState:
    WritableState {
      objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object] },
   writable: true,
   allowHalfOpen: true,
   destroyed: false,
   _bytesDispatched: 0,
   _sockname: null,
   _pendingData: null,
   _pendingEncoding: '',
   server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _idleTimeout: 120000,
   _idleNext:
    Socket {
      connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      _bytesDispatched: 653,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 2620195,
      parser: [Object],
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
   _idlePrev:
    TimersList {
      _idleNext: [Circular],
      _idlePrev: [Object],
      _timer: [Object],
      _unrefed: true,
      msecs: 120000,
      nextTick: false },
   _idleStart: 2626313,
   parser:
    HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: onParserExecute],
      _headers: [],
      _url: '',
      _consumed: true,
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
   on: [Function: socketOnWrap],
   _paused: false,
   read: [Function],
   _consuming: true,
   _httpMessage:
    ServerResponse {
      domain: null,
      _events: [Object],
      _eventsCount: 1,
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      outputSize: 0,
      writable: true,
      _last: false,
      upgrading: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      _onPendingData: [Function: updateOutgoingData],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] } },
httpVersionMajor: 1,
httpVersionMinor: 1,
httpVersion: '1.1',
complete: true,
headers:
 { 'x-forwarded-host': 'localhost:3000',
   'x-forwarded-proto': 'http',
   'x-forwarded-port': '3000',
   'x-forwarded-for': '127.0.0.1',
   cookie: 'connect.sid=s%3AclZYbq5wkEjSyhiaYP3gRkXZkBqmLa8k.YoUmjWRqzXxAXpPN2gBlSfB0khReJJcWYPJw3UiklLI',
   'accept-language': 'en-US,en;q=0.9,de;q=0.8',
   'accept-encoding': 'gzip, deflate, br',
   referer: 'http://localhost:3000/dashboard',
   dnt: '1',
   'content-type': 'application/x-www-form-urlencoded',
   'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36',
   origin: 'http://localhost:3005/',
   accept: 'application/json, text/plain, */*',
   'content-length': '6',
   connection: 'close',
   host: 'localhost:3005' },
rawHeaders:
 [ 'x-forwarded-host',
   'localhost:3000',
   'x-forwarded-proto',
   'http',
   'x-forwarded-port',
   '3000',
   'x-forwarded-for',
   '127.0.0.1',
   'cookie',
   'connect.sid=s%3AclZYbq5wkEjSyhiaYP3gRkXZkBqmLa8k.YoUmjWRqzXxAXpPN2gBlSfB0khReJJcWYPJw3UiklLI',
   'accept-language',
   'en-US,en;q=0.9,de;q=0.8',
   'accept-encoding',
   'gzip, deflate, br',
   'referer',
   'http://localhost:3000/dashboard',
   'dnt',
   '1',
   'content-type',
   'application/x-www-form-urlencoded',
   'user-agent',
   'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36',
   'origin',
   'http://localhost:3005/',
   'accept',
   'application/json, text/plain, */*',
   'content-length',
   '6',
   'connection',
   'close',
   'host',
   'localhost:3005' ],
trailers: {},
rawTrailers: [],
upgrade: false,
url: '/api/newstack',
method: 'POST',
statusCode: null,
statusMessage: null,
client:
 Socket {
   connecting: false,
   _hadError: false,
   _handle:
    TCP {
      bytesRead: 691,
      _externalStream: {},
      fd: -1,
      reading: true,
      owner: [Circular],
      onread: [Function: onread],
      onconnection: null,
      writeQueueSize: 0,
      _consumed: true },
   _parent: null,
   _host: null,
   _readableState:
    ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: [Object],
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      defaultEncoding: 'utf8',
      ranOut: false,
      awaitDrain: 0,
      readingMore: false,
      decoder: null,
      encoding: null },
   readable: true,
   domain: null,
   _events:
    { end: [Object],
      finish: [Function: onSocketFinish],
      _socketEnd: [Function: onSocketEnd],
      drain: [Object],
      timeout: [Function],
      error: [Function: socketOnError],
      close: [Object],
      data: [Function: socketOnData],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause] },
   _eventsCount: 10,
   _maxListeners: undefined,
   _writableState:
    WritableState {
      objectMode: false,
      highWaterMark: 16384,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function],
      writecb: null,
      writelen: 0,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object] },
   writable: true,
   allowHalfOpen: true,
   destroyed: false,
   _bytesDispatched: 0,
   _sockname: null,
   _pendingData: null,
   _pendingEncoding: '',
   server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _server:
    Server {
      domain: null,
      _events: [Object],
      _eventsCount: 2,
      _maxListeners: undefined,
      _connections: 2,
      _handle: [Object],
      _usingSlaves: false,
      _slaves: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      _pendingResponseData: 0,
      _connectionKey: '6::::3005' },
   _idleTimeout: 120000,
   _idleNext:
    Socket {
      connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      _bytesDispatched: 653,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Circular],
      _idleStart: 2620195,
      parser: [Object],
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: null },
   _idlePrev:
    TimersList {
      _idleNext: [Circular],
      _idlePrev: [Object],
      _timer: [Object],
      _unrefed: true,
      msecs: 120000,
      nextTick: false },
   _idleStart: 2626313,
   parser:
    HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: onParserExecute],
      _headers: [],
      _url: '',
      _consumed: true,
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      onIncoming: [Function: parserOnIncoming] },
   on: [Function: socketOnWrap],
   _paused: false,
   read: [Function],
   _consuming: true,
   _httpMessage:
    ServerResponse {
      domain: null,
      _events: [Object],
      _eventsCount: 1,
      _maxListeners: undefined,
      output: [],
      outputEncodings: [],
      outputCallbacks: [],
      outputSize: 0,
      writable: true,
      _last: false,
      upgrading: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedHeader: {},
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _headers: [Object],
      _headerNames: [Object],
      _onPendingData: [Function: updateOutgoingData],
      req: [Circular],
      locals: {},
      writeHead: [Function: writeHead],
      end: [Function: end] } },
_consuming: false,
_dumped: false,
next: [Function: next],
baseUrl: '',
originalUrl: '/api/newstack',
_parsedUrl:
 Url {
   protocol: null,
   slashes: null,
   auth: null,
   host: null,
   port: null,
   hostname: null,
   hash: null,
   search: null,
   query: null,
   pathname: '/api/newstack',
   path: '/api/newstack',
   href: '/api/newstack',
   _raw: '/api/newstack' },
params: {},
query: {},
res:
 ServerResponse {
   domain: null,
   _events: { finish: [Function: resOnFinish] },
   _eventsCount: 1,
   _maxListeners: undefined,
   output: [],
   outputEncodings: [],
   outputCallbacks: [],
   outputSize: 0,
   writable: true,
   _last: false,
   upgrading: false,
   chunkedEncoding: false,
   shouldKeepAlive: false,
   useChunkedEncodingByDefault: true,
   sendDate: true,
   _removedHeader: {},
   _contentLength: null,
   _hasBody: true,
   _trailer: '',
   finished: false,
   _headerSent: false,
   socket:
    Socket {
      connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      _bytesDispatched: 0,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Object],
      _idleStart: 2626313,
      parser: [Object],
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: [Circular] },
   connection:
    Socket {
      connecting: false,
      _hadError: false,
      _handle: [Object],
      _parent: null,
      _host: null,
      _readableState: [Object],
      readable: true,
      domain: null,
      _events: [Object],
      _eventsCount: 10,
      _maxListeners: undefined,
      _writableState: [Object],
      writable: true,
      allowHalfOpen: true,
      destroyed: false,
      _bytesDispatched: 0,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Object],
      _server: [Object],
      _idleTimeout: 120000,
      _idleNext: [Object],
      _idlePrev: [Object],
      _idleStart: 2626313,
      parser: [Object],
      on: [Function: socketOnWrap],
      _paused: false,
      read: [Function],
      _consuming: true,
      _httpMessage: [Circular] },
   _header: null,
   _headers: { 'x-powered-by': 'Express' },
   _headerNames: { 'x-powered-by': 'X-Powered-By' },
   _onPendingData: [Function: updateOutgoingData],
   req: [Circular],
   locals: {},
   writeHead: [Function: writeHead],
   end: [Function: end] },
body: {},
_parsedOriginalUrl:
 Url {
   protocol: null,
   slashes: null,
   auth: null,
   host: null,
   port: null,
   hostname: null,
   hash: null,
   search: null,
   query: null,
   pathname: '/api/newstack',
   path: '/api/newstack',
   href: '/api/newstack',
   _raw: '/api/newstack' },
sessionStore:
 MemoryStore {
   domain: null,
   _events:
    { disconnect: [Function: ondisconnect],
      connect: [Function: onconnect] },
   _eventsCount: 2,
   _maxListeners: undefined,
   sessions: { clZYbq5wkEjSyhiaYP3gRkXZkBqmLa8k: '{"cookie":{"originalMaxAge":null,"expires":null,"httpOnly":true,"path":"/"},"passport":{"user":{"id":2,"stacks":{},"answers":{}}}}' },
   generate: [Function] },
sessionID: 'clZYbq5wkEjSyhiaYP3gRkXZkBqmLa8k',
session:
 Session {
   cookie:
    { path: '/',
      _expires: null,
      originalMaxAge: null,
      httpOnly: true },
   passport: { user: [Object] } },
_passport:
 { instance:
    Authenticator {
      _key: 'passport',
      _strategies: [Object],
      _serializers: [Object],
      _deserializers: [Object],
      _infoTransformers: [],
      _framework: [Object],
      _userProperty: 'user',
      _sm: [Object],
      Authenticator: [Function: Authenticator],
      Passport: [Function: Authenticator],
      Strategy: [Object],
      strategies: [Object] },
   session: { user: [Object] } },
user:
 anonymous {
   user_id: 2,
   user_name: '',
   isteacher: null,
   isstudent: null,
   permissions_level: 1,
   first_name: '',
   last_name: '',
   screen_name: '',
   img: '',
   auth_id: 'google-oauth2|108787943631662510113' },
route:
 Route {
   path: '/api/newstack',
   stack: [ [Object] ],
   methods: { post: true } } }
here is the user id from inside create stack controller 2
TypeError: db.sq_create_stacks is not a function
  at createStack (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\server\controllers\api_controllers.js:36:16)
  at Layer.handle [as handle_request] (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\layer.js:95:5)
  at next (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\route.js:137:13)
  at Route.dispatch (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\route.js:112:3)
  at Layer.handle [as handle_request] (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\layer.js:95:5)
  at c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\index.js:281:22
  at Function.process_params (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\index.js:335:12)
  at next (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\express\lib\router\index.js:275:10)
  at SessionStrategy.strategy.pass (c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\passport\lib\middleware\authenticate.js:338:9)
  at c:\Users\pcdav\Desktop\WebDev\show-of-hands-sun-night\node_modules\passport\lib\strategies\session.js:69:12
[nodemon] restarting due to changes...
[nodemon] starting `node server/index.js`
Server listening on port 3005.
DB is connected